name: Release new package

on:
  # push:
  #   branches: [ branch_name ]

  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release type'
        required: true
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@v2.3.4

      # Setup NodeJS environment
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          registry-url: https://registry.npmjs.org/
          node-version: '16'

      # Install dependencies. Run linter & test. Build.
      - name: Install, linter & test, and build
        run: |
          yarn install
          yarn lint
          yarn test
          yarn build

      # Configure Git user name and email
      - name: Git configuration
        run: |
          git config --global user.email "${{ github.actor }}+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}+github-actions[bot]"
      
      # Bump package version. Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version ${{ github.event.inputs.release-type }})" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV

      # Bump package pre-release version. Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version ${{ github.event.inputs.release-type }})" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV

      # Update changelog unreleased section with new version
      # - name: Update changelog
      #   uses: superfaceai/release-changelog-action@v1
      #   with:
      #     path-to-changelog: CHANGELOG.md
      #     version: ${{ env.NEW_VERSION }}
      #     operation: release

      # Commit changes
      - name: Commit changes
        run: |
          git add -A
          git commit -m "Release ${{ env.NEW_VERSION }}"

      # Publish version
      - name: Publish
        run: npm publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
        
      # Push repository changes
      - name: Push changes to repository
        run: |
          git push 
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Read version changelog
      # - id: get-changelog
      #   name: Get version changelog
      #   uses: superfaceai/release-changelog-action@v1
      #   with:
      #     path-to-changelog: CHANGELOG.md
      #     version: ${{ env.NEW_VERSION }}
      #     operation: read

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: "New version ${{ env.NEW_VERSION }}" # ${{ steps.get-changelog.outputs.changelog }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

